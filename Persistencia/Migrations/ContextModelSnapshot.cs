// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

namespace Persistencia.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Persistencia.Models.Desperfecto", b =>
                {
                    b.Property<int>("DesperfectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ManoDeObra")
                        .HasColumnType("real");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("DesperfectoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Desperfecto");
                });

            modelBuilder.Entity("Persistencia.Models.Desperfecto_Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DesperfectoId")
                        .HasColumnType("int");

                    b.Property<int>("RepuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DesperfectoId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("Desperfectos_Repuestos");
                });

            modelBuilder.Entity("Persistencia.Models.Repuesto", b =>
                {
                    b.Property<int>("RepuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("RepuestoId");

                    b.ToTable("Repuesto");
                });

            modelBuilder.Entity("Persistencia.Models.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculoId");

                    b.ToTable("Vehiculo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehiculo");
                });

            modelBuilder.Entity("Persistencia.Models.Automovil", b =>
                {
                    b.HasBaseType("Persistencia.Models.Vehiculo");

                    b.Property<int>("CantidadPuertas")
                        .HasColumnType("int");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Automovil");
                });

            modelBuilder.Entity("Persistencia.Models.Moto", b =>
                {
                    b.HasBaseType("Persistencia.Models.Vehiculo");

                    b.Property<int>("Cilindrada")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Moto");
                });

            modelBuilder.Entity("Persistencia.Models.Desperfecto", b =>
                {
                    b.HasOne("Persistencia.Models.Vehiculo", "Vehiculo")
                        .WithMany("Desperfectos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Persistencia.Models.Desperfecto_Repuesto", b =>
                {
                    b.HasOne("Persistencia.Models.Desperfecto", "Desperfecto")
                        .WithMany("Desperfecto_Repuesto")
                        .HasForeignKey("DesperfectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistencia.Models.Repuesto", "Repuesto")
                        .WithMany("Desperfecto_Repuesto")
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Desperfecto");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("Persistencia.Models.Desperfecto", b =>
                {
                    b.Navigation("Desperfecto_Repuesto");
                });

            modelBuilder.Entity("Persistencia.Models.Repuesto", b =>
                {
                    b.Navigation("Desperfecto_Repuesto");
                });

            modelBuilder.Entity("Persistencia.Models.Vehiculo", b =>
                {
                    b.Navigation("Desperfectos");
                });
#pragma warning restore 612, 618
        }
    }
}
